#ifndef __UARTCMDRUN_H_
#define __UARTCMDRUN_H_

//定义是使用链表还是使用数组来存储命令映射
#define LIST 0
//数组大小
#define ARRAY_SIZE 10   

//如果使能LIST,就不使能数组，否则使能数组
#if (LIST > 0)
    #define ARRAY 0
#else
    #define ARRAY 1
#endif

#if (LIST > 0)
  /*****************************************************************************
  *  命令映射表结构体
  ******************************************************************************/
  typedef struct UARTCMDRUN_t
  {
    char cmd[10];    //命令名称
    void (*uartCmdRun_fun)();   //命令函数
    struct UARTCMDRUN_t * next;  //链表指针
  }UARTCMDRUNArray;
#endif

#if (ARRAY > 0)
  /*****************************************************************************
  *  命令映射表结构体
  ******************************************************************************/
  typedef struct UARTCMDRUN_t
  {
    char cmd[10];    //命令名称
    void (*uartCmdRun_fun)();   //命令函数
  }UARTCMDRUNArray;
#endif


/*****************************************************************************
*  函数介绍  ： 初始化串口命令
*            ：
*    参数    ： 无
*   返回值   ： 无
******************************************************************************/

extern void initUartCmd();

/*****************************************************************************
*  函数介绍  ： 运行指令的函数
*            ：
*    参数    ： cmd ： 命令名字
*   返回值   ： 无
******************************************************************************/
extern void runUartCmd(char * cmd);


/*****************************************************************************
*  函数介绍  ： 添加一个命令映射
*            ：
*    参数    ： cmd : 将要添加的映射
*            ： inuartCmdRun_fun ： 对应的函数
*   返回值   ： 删除成功返回0,否则返回1
******************************************************************************/

extern int addUartCmd(char * cmd, void (*uartCmdRun_fun)());

/*****************************************************************************
*  函数介绍  ： 删除一个命令映射
*            ：
*    参数    ： cmd : 将要删除的映射
*   返回值   ： 删除成功返回0,否则返回1
******************************************************************************/
extern int deleteUartCmd(char * cmd);
#endif
